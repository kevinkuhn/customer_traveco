# Traveco Forecasting Project Configuration

data:
  # Raw data paths (relative to notebooks directory)
  raw_path: "../data/swisstransfer_f473fe80-56b4-4ff0-8cbb-1bb5e181450a/"
  order_analysis: "20251015 Juni 2025 QS Auftragsanalyse.xlsb"
  tour_assignments: "20251015 QS Tourenaufstellung Juni 2025.xlsx"
  divisions: "20251015 Sparten.xlsx"

  # Processed data paths (relative to notebooks directory)
  processed_path: "../data/processed/"
  clean_orders: "clean_orders.csv"
  features_engineered: "features_engineered.csv"
  monthly_aggregated: "monthly_aggregated.csv"

  # Results path (relative to notebooks directory)
  results_path: "../results/"

  # Models path (relative to notebooks directory)
  models_path: "../models/"

# Target variables for forecasting
features:
  target_columns:
    - "revenue"
    - "external_drivers"
    - "personnel_costs"

  # Lag features (in months)
  lag_periods: [1, 3, 6, 12]

  # Temporal features to extract
  temporal_features:
    - "year"
    - "month"
    - "week"
    - "quarter"
    - "day_of_year"
    - "weekday"

# Data filtering rules
filtering:
  # Exclude B&T pickup orders (System B&T with empty customer)
  exclude_bt_pickups: true

  # Carrier number ranges
  internal_carrier_max: 8889  # 1-8889 are TRAVECO internal
  external_carrier_min: 9000  # 9000+ are external carriers

# Validation strategy
validation:
  # Hold out 2024 for validation
  holdout_year: 2024

  # Time series cross-validation
  n_splits: 5

  # Metrics to calculate
  metrics:
    - "mape"
    - "rmse"
    - "mae"
    - "seasonal_mape"
    - "directional_accuracy"

# Model configurations
models:
  # Model A: Prophet (Seasonality-focused)
  prophet:
    yearly_seasonality: true
    weekly_seasonality: false
    daily_seasonality: false
    seasonality_mode: "multiplicative"
    changepoint_prior_scale: 0.05

    # Custom seasonalities
    custom_seasonalities:
      quarterly:
        period: 91.25
        fourier_order: 5
      monthly:
        period: 30.5
        fourier_order: 10

    # Swiss holidays
    include_holidays: true
    country_holidays: "CH"

  # Model A: SARIMAX
  sarimax:
    order: [2, 1, 2]           # (p, d, q) - ARIMA order
    seasonal_order: [1, 1, 1, 12]  # (P, D, Q, s) - Seasonal order
    enforce_stationarity: false
    enforce_invertibility: false

  # Model A: XGBoost
  xgboost:
    n_estimators: 200
    max_depth: 6
    learning_rate: 0.05
    subsample: 0.8
    colsample_bytree: 0.8
    random_state: 42

    # Feature columns (temporal + lag features)
    feature_columns:
      - "month"
      - "quarter"
      - "week"
      - "day_of_year"
      - "weekday"

  # Model B: Weighted Prophet (Time decay-focused)
  weighted_prophet:
    yearly_seasonality: true
    seasonality_mode: "multiplicative"
    changepoint_prior_scale: 0.1  # More responsive to recent changes

    custom_seasonalities:
      quarterly:
        period: 91.25
        fourier_order: 5

  # Model B: Time-weighted ensemble
  ensemble:
    base_model: "random_forest"
    n_estimators: 100
    random_state: 42

# Time decay parameters
time_decay:
  # Exponential decay rate for weighting recent data
  decay_rate: 0.3  # λ in formula: w(t) = exp(-λ * (T - t))

  # Year-level decay for ensemble
  year_decay: 0.5  # For year_weight = exp(-0.5 * (2025 - year))

  # Test different decay rates
  test_decay_rates: [0.2, 0.3, 0.4, 0.5]

# Forecast parameters
forecast:
  # Target year
  target_year: 2025

  # Number of periods to forecast (months)
  forecast_periods: 12

  # Confidence intervals
  confidence_level: 0.95

# Visualization settings
visualization:
  # Plotly theme
  theme: "plotly_white"

  # Color scheme
  colors:
    actual: "blue"
    model_a: "green"
    model_b: "red"
    current_method: "gray"
    baseline: "orange"

  # Figure size
  figure_height: 1200
  figure_width: 1400

  # Export formats
  export_formats:
    - "html"
    - "png"

# Logging
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/forecasting.log"
